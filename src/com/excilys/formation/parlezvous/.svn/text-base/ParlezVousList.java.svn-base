package com.excilys.formation.parlezvous;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Random;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;

import android.app.ListActivity;
import android.content.Intent;
import android.os.AsyncTask;
import android.os.Bundle;
import android.text.TextUtils;
import android.util.Log;
import android.widget.ArrayAdapter;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.TextView;

import com.excilys.formation.parlezvous.utils.InputStreamToString;

public class ParlezVousList extends ListActivity {

	private final String TAG = ParlezVousList.class.getSimpleName();

	private EditText message;
	private TextView errorMessage;
	private ListView list;

	private ListView mainListView;
	private ArrayAdapter<String> listAdapter;
	public static final String SERVER = "parlezvous.herokuapp.com";

	ArrayList<Message> messages;
	AwesomeAdapter adapter;
	EditText text;
	static Random rand = new Random();

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		Log.i(TAG, "onCreate!");

		// setContentView(R.layout.activity_list);
		setContentView(R.layout.main);

		text = (EditText) this.findViewById(R.id.text);

		messages = new ArrayList<Message>();

		// message = (EditText) findViewById(R.id.editTextMessage);
		// list = (ListView)findViewById(R.id.listViewMessage);

		// errorMessage = (TextView) findViewById(R.id.error_message);
		// String[] values = new String[] { "Android" };

		Intent intent = getIntent();
		String username = intent.getStringExtra("username");
		String password = intent.getStringExtra("password");

		DefaultHttpClient client = new DefaultHttpClient();
		HttpGet httpGet = new HttpGet("http://" + SERVER + "/messages/"
				+ username + "/" + password);

		String content = null;
		try {
			HttpResponse response = client.execute(httpGet);
			HttpEntity entity = response.getEntity();
			content = InputStreamToString.convert(entity.getContent());
		} catch (ClientProtocolException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}

		String[] contentSplit = content.split(";");

		/*
		 * listAdapter = new ArrayAdapter<String>(this,
		 * android.R.layout.simple_list_item_1, contentSplit);
		 */

		// if (content.length() > 0) {

		// listAdapter.add( "Ceres" );
		// listAdapter.add( "Plop" );

		// Assign adapter to ListView
		// list.setTranscriptMode(AbsListView.TRANSCRIPT_MODE_ALWAYS_SCROLL);

		// list.setAdapter(listAdapter);

		// }
		int nb=contentSplit.length;
		for (int i = 0; i < contentSplit.length; i++) {
			String[] strNameMessage = contentSplit[i].split(":");

			if (username.equals(strNameMessage[0]))
				messages.add(new Message(strNameMessage[1], true));
			else
				messages.add(new Message("<u><b>"+strNameMessage[0]+" :</b></u><br />"+strNameMessage[1], false));

		}

		adapter = new AwesomeAdapter(this, messages);
		setListAdapter(adapter);

	}

	private boolean hasEmptyFields() {
		return TextUtils.isEmpty(message.getText());
	}

	@Override
	protected void onPause() {
		super.onPause();
		Log.i(TAG, "onPause!");
	}

	@Override
	protected void onRestart() {
		super.onRestart();
		Log.i(TAG, "onRestart!");
	}

	@Override
	protected void onRestoreInstanceState(Bundle savedInstanceState) {
		super.onRestoreInstanceState(savedInstanceState);
		Log.i(TAG, "onRestoreInstanceState!");
	}

	@Override
	protected void onResume() {
		super.onResume();
		Log.i(TAG, "onResume!");
	}

	@Override
	protected void onSaveInstanceState(Bundle outState) {
		super.onSaveInstanceState(outState);
		Log.i(TAG, "onSaveInstanceState!");
	}

	@Override
	protected void onDestroy() {
		super.onDestroy();
		Log.i(TAG, "onDestroy!");
	}

	private class ParlezVousTask extends AsyncTask<String, String, Boolean> {

		public static final String SERVER = "parlezvous.herokuapp.com";
		public static final int PORT = 9000;

		@Override
		protected Boolean doInBackground(String... params) {

			Intent intent = getIntent();
			String username = intent.getStringExtra("username");
			String password = intent.getStringExtra("password");

			DefaultHttpClient client = new DefaultHttpClient();
			HttpGet httpGet = new HttpGet("http://" + SERVER + "/messages/"
					+ username + "/" + password);

			String content = null;
			try {
				HttpResponse response = client.execute(httpGet);
				HttpEntity entity = response.getEntity();
				content = InputStreamToString.convert(entity.getContent());
			} catch (ClientProtocolException e) {
				e.printStackTrace();
			} catch (IOException e) {
				e.printStackTrace();
			}

			if (content.length() == 0)
				return false;
			else {
				// String[] contentSplit = content.split(";");

				/*
				 * listAdapter.add( "Ceres" ); listAdapter.add( "Plop" );
				 * 
				 * // Assign adapter to ListView list.setAdapter(listAdapter);
				 */

				return true;
			}

		}

		@Override
		protected void onPostExecute(Boolean result) {
			/*
			 * String message; if (result) { message = "message erreur";
			 * //intent.setAction(
			 * "com.excilys.formation.parlezvous.ParlezVousRedirect.MY_OWN_ACTION"
			 * ); } else { message = "message envoyé"; }
			 * Toast.makeText(ParlezVousList.this, message,
			 * Toast.LENGTH_SHORT).show();
			 */
		}

	}

}